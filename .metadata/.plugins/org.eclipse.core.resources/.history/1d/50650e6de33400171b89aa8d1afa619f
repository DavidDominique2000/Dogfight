import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Image;
import java.awt.geom.AffineTransform;
import java.awt.image.AffineTransformOp;
import java.awt.image.BufferedImage;
import java.awt.image.RenderedImage;

import javax.swing.JPanel;

public class Airplane extends JPanel{

	private Image plane;
	private boolean isP1;
	private int speed;
	private int x, y;
	private AffineTransform coordTransform;
	private AffineTransformOp op;
	//private int bombs = 3;
	
	
	public Airplane(Image plane, boolean isP1){
		this.plane = plane;
		plane = plane.getScaledInstance(100, 50, 100);
		this.isP1 = isP1;
		if(isP1 == true){
			coordTransform = new AffineTransform();
			x = 0;
			y = 100;
		}
		else{
			coordTransform = new AffineTransform();
			x = 1000;//Change this to match size of window
			y = 300;
		}
	}
	
	public void move(int dir){
		
	}
	
	public void rotate(int amount){
		// The required drawing location
		int drawLocationX = 300;
		int drawLocationY = 300;

		// Rotation information

		double rotationRequired = Math.toRadians (amount);
		double locationX = plane.getWidth(this) / 2;
		double locationY = plane.getHeight(this) / 2;
		coordTransform = AffineTransform.getRotateInstance(rotationRequired, locationX, locationY);
		op = new AffineTransformOp(coordTransform, AffineTransformOp.TYPE_BILINEAR);

		// Drawing the rotated image at the required drawing locations
	}
	
	public void paintComponent(Graphics g){
		Graphics2D g2d = (Graphics2D)g;
		g2d.drawImage(op.filter((BufferedImage) plane, null), x, y, null);

	}
}
