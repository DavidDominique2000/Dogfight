import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Image;
import java.awt.geom.AffineTransform;
import java.awt.image.AffineTransformOp;
import java.awt.image.BufferedImage;
import java.awt.image.RenderedImage;

import javax.swing.JPanel;

public class Airplane extends JPanel{

	private Image plane;
	private boolean isP1;
	private int speed = 5;
	private int x, y;
	private int angle;
	private AffineTransform coordTransform;
	private AffineTransformOp op;
	//private int bombs = 3;


	public Airplane(Image plane, boolean isP1){
		this.plane = plane;
		plane = plane.getScaledInstance(100, 50, 100);
		this.isP1 = isP1;
		if(isP1 == true){
			coordTransform = new AffineTransform();
			x = 0;
			y = 100;
			angle = 0;
		}
		else{
			coordTransform = new AffineTransform();
			x = 1000;//Change this to match size of window
			y = 300;
			angle = 180;
		}
	}

	public void changeSpeed(int change){
		if(speed + change <= 7 && speed + change > 1){
			speed += change;
		}
	}

	public void move(){
		while(angle > 360){
			angle -= 360;
		}
		while(angle < -360){
			angle += 360;
		}
		y += Math.tan(Math.toRadians(angle)) * speed;
		x += Math.tan(Math.toRadians(angle))  * speed;
	}

	public void rotate(int amount){
		angle += amount;
		double rotationRequired = Math.toRadians (amount);
		double locationX = plane.getWidth(this) / 2;
		double locationY = plane.getHeight(this) / 2;
		coordTransform = AffineTransform.getRotateInstance(rotationRequired, locationX, locationY);
		op = new AffineTransformOp(coordTransform, AffineTransformOp.TYPE_BILINEAR);
	}

	public void paintComponent(Graphics g){
		Graphics2D g2d = (Graphics2D)g;
		g2d.drawImage(op.filter((BufferedImage) plane, null), x, y, null);

	}
}
